<?php
/**
 * Created by Daniel BatÄ›k (http://webloop.io/)
 * User: keyBeatz
 * Package: webloopio:nette-websockets
 * Date: 13.03. 2018
 * Time: 16:07
 * License: MIT
 * Since: 0.1
 */

namespace Webloopio\NetteWebsockets\Client;

use Ratchet\ConnectionInterface;
use Webloopio\Exceptions\ClientLogicException;
use Webloopio\NetteWebsockets\IClientConnection;


/**
 * Class Client
 * @package AllStars\WebSockets
 */
class Client implements IClientConnection {

    /**
     * @var ConnectionInterface
     */
    private $connection;
    /**
     * @var resource id of connection (generated by ratchet server)
     */
    private $resourceId;
    /**
     * @var int - id of user in allstars system
     */
    private $userId;
    /**
     * @var string|null - name of presenter in allstars system
     */
    private $presenterName;
    /**
     * @var int|null - id of page in allstars system
     */
    private $pageId;

    /**
     * Client constructor.
     *
     * @param ConnectionInterface $connection
     * @param int $userId
     *
     * @throws ClientLogicException
     */
    function __construct( ConnectionInterface $connection, int $userId = 0 ) {
        $this->connection = $connection;
        $this->resourceId = $connection->resourceId ?? null;
        $this->userId = $userId;

        if( $this->resourceId === null ) {
            throw new ClientLogicException("No resource id was provided in connection. Can't create object.");
        }
    }

    /**
     * @return ConnectionInterface
     */
    public function getConnection(): ConnectionInterface {
        return $this->connection;
    }

    /**
     * @return int
     */
    public function getResourceId(): int {
        return $this->resourceId;
    }

    /**
     * @return int
     */
    public function getUserId(): int {
        return $this->userId;
    }

    /**
     * @param string $message
     */
    final public function send( $message ) {
        $this->connection->send( $message );
    }

    /**
     *
     */
    final public function close() {
        $this->connection->close();
    }

    /**
     * @param int $userId
     */
    public function setUserId( int $userId ) {
        $this->userId = $userId;
    }

    /**
     * @return null|string
     */
    public function getPresenterName() {
        return $this->presenterName;
    }

    /**
     * @param null|string $presenterName
     */
    public function setPresenterName( string $presenterName = null ) {
        $this->presenterName = $presenterName;
    }

    /**
     * @return null|int
     */
    public function getPageId() {
        return $this->pageId;
    }

    /**
     * @param int $pageId
     */
    public function setPageId(int $pageId) {
        $this->pageId = $pageId;
    }
}

